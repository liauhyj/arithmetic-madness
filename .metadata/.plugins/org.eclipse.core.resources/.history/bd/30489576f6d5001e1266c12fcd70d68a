<html>
    <head>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <style>
            body {
                background-image: url("https://images.unsplash.com/photo-1472289065668-ce650ac443d2?q=80&w=2069&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D");
                min-height: 100vh;
                min-width: 100vw;
                overflow: hidden;
                background-size: cover;
                background-position: top right;
                display: flex;
                align-items: center;
                justify-content: center;
            }

            input::-webkit-outer-spin-button,
            input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
            }

            /* Firefox */
            input[type=number] {
            -moz-appearance: textfield;
            }

            .top {
                padding: 10px;
                background: #f1f1f1;
                border-top-left-radius: 4px;
                border-top-right-radius: 4px;
            }

            .dot {
            height: 12px;
            width: 12px;
            background-color: #bbb;
            border-radius: 50%;
            display: inline-block;
            }

            .center {
                margin: auto;
            }

            .row-settings {
                margin: 20px;
            }

            .question-settings {
                margin: 50px;
            }

            .answer-settings {
                border: 0px;
            }

            .answer-settings:focus {
                outline: none;
            }

            .col-settings {
                display: flex;
                justify-content: center;
                align-items: center;
                text-align: center;
            }
            
            .card-template {
                min-width: 80%;
                min-height: 50%;
            }

            .card-landing-template {
                min-width: 40%;
                min-height: 50%;
            }

            .card-header {
                background-color: #F8F9FA;
            }
            
            #confetti {
            overflow-y: hidden;
            overflow-x: hidden;
            width: 100%;
            margin: 0;
            height: 100%;
            position: absolute;
            top: 0;
            }

            .img-resize {
                max-width: 30%;
            } 

        </style>
    </head>
    <body>
        <canvas id="confetti"></canvas>
        <div class="card mb-3 card-landing-template">
            <div class="top">
                <span class="dot"></span>
                <span class="dot"></span>
                <span class="dot"></span>
              </div>
        <div class="container center w-100">
            <div class="row row-settings">
                <div class="col col-settings">
                    <img class="card-img-top img-resize" src="C:\Users\hengl\Downloads\Well done.gif"/>
                </div>
            </div>
            <div class="row card-title">
                <div class="col col-settings">
                <h1>Great work!</h1>
            </div>
            </div>    
            <div class="card-body">
                <div class="row">
                    <div class="col col-settings">
                        <p>You scored {insert score here} points!</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col col-settings">
                        <button class="btn btn-warning btn-lg w-100" type="button">Try again</button>
                    </div>
                </div>
            </div>
        </div>
        </div>
    </div>
    <script>
        let W = window.innerWidth;
        let H = document.getElementById('confetti').clientHeight;
        const canvas = document.getElementById('confetti');
        const context = canvas.getContext("2d");
        const maxConfettis = 25;
        const particles = [];

        const possibleColors = [
        "#ff7336",
        "#f9e038",
        "#02cca4",
        "#383082",
        "#fed3f5",
        "#b1245a",
        "#f2733f"
        ];

        function randomFromTo(from, to) {
        return Math.floor(Math.random() * (to - from + 1) + from);
        }

        function confettiParticle() {
        this.x = Math.random() * W; // x
        this.y = Math.random() * H - H; // y
        this.r = randomFromTo(11, 33); // radius
        this.d = Math.random() * maxConfettis + 11;
        this.color =
            possibleColors[Math.floor(Math.random() * possibleColors.length)];
        this.tilt = Math.floor(Math.random() * 33) - 11;
        this.tiltAngleIncremental = Math.random() * 0.07 + 0.05;
        this.tiltAngle = 0;

        this.draw = function() {
            context.beginPath();
            context.lineWidth = this.r / 2;
            context.strokeStyle = this.color;
            context.moveTo(this.x + this.tilt + this.r / 3, this.y);
            context.lineTo(this.x + this.tilt, this.y + this.tilt + this.r / 5);
            return context.stroke();
        };
        }

        function Draw() {
        const results = [];

        // Magical recursive functional love
        requestAnimationFrame(Draw);

        context.clearRect(0, 0, W, window.innerHeight);

        for (var i = 0; i < maxConfettis; i++) {
            results.push(particles[i].draw());
        }

        let particle = {};
        let remainingFlakes = 0;
        for (var i = 0; i < maxConfettis; i++) {
            particle = particles[i];

            particle.tiltAngle += particle.tiltAngleIncremental;
            particle.y += (Math.cos(particle.d) + 3 + particle.r / 2) / 2;
            particle.tilt = Math.sin(particle.tiltAngle - i / 3) * 15;

            if (particle.y <= H) remainingFlakes++;

            // If a confetti has fluttered out of view,
            // bring it back to above the viewport and let if re-fall.
            if (particle.x > W + 30 || particle.x < -30 || particle.y > H) {
            particle.x = Math.random() * W;
            particle.y = -30;
            particle.tilt = Math.floor(Math.random() * 10) - 20;
            }
        }

        return results;
        }

        window.addEventListener(
        "resize",
        function() {
            W = window.innerWidth;
            H = window.innerHeight;
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
        },
        false
        );

        // Push new confetti objects to `particles[]`
        for (var i = 0; i < maxConfettis; i++) {
        particles.push(new confettiParticle());
        }

        // Initialize
        canvas.width = W;
        canvas.height = H;
        Draw();
    </script>        
    </body>
</html>